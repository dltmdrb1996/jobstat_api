name: CI/CD

on:
  pull_request:
    branches: [ develop, main ]
  push:
    branches: [ develop, main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set environment variables
        run: |
          while IFS= read -r line; do
            if [ -n "$line" ]; then
              echo "$line" >> $GITHUB_ENV
            fi
          done <<< "${{ secrets.DEV_SECRET }}"

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run ktlintCheck
        run: ./gradlew ktlintCheck

      - name: Run Tests
        run: ./gradlew test
        env:
          SPRING_PROFILES_ACTIVE: test
          TESTCONTAINERS_REUSE_ENABLE: true

  docker-build-and-push:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3

      - name: Set environment variables
        run: |
          while IFS= read -r line; do
            if [ -n "$line" ]; then
              echo "$line" >> $GITHUB_ENV
            fi
          done <<< "${{ secrets.DEV_SECRET }}"

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker images
        env:
          TAG: ${{ github.sha }}
        run: |
          # Spring App
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/jobstat-app:$TAG .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/jobstat-app:$TAG
          
          # Nginx
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/jobstat-nginx:$TAG -f nginx/Dockerfile ./nginx
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/jobstat-nginx:$TAG

  deploy:
    needs: docker-build-and-push
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ec2-user/jobstat
            export TAG=${{ github.sha }}
            docker-compose pull
            docker-compose up -d
            docker system prune -af
