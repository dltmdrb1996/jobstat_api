#name: CI - Lint and Test
#
#on:
#  pull_request:
#    branches: [ "main", "develop", "feature/*", "feat/*" ]
#
#jobs:
#  lint-and-test:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#        with:
#          fetch-depth: 0
#
#      - name: Set up JDK 21
#        uses: actions/setup-java@v4
#        with:
#          java-version: '21'
#          distribution: 'temurin'
#          cache: gradle
#
#      - name: Grant execute permission for gradlew
#        run: chmod +x gradlew
#
#      - name: Get changed files
#        id: changed_files
#        uses: tj-actions/changed-files@v44
#
#      - name: Determine tasks to run based on changed files
#        id: determine_tasks
#        run: |
#          TASKS_TO_RUN=""
#
#          echo "--- Checking for global or core library changes ---"
#          build_all_flag=false
#          for file in ${{ steps.changed_files.outputs.all_changed_files }}; do
#            if [[ "$file" == build.gradle.kts || "$file" == settings.gradle.kts || "$file" == "gradle/"* || "$file" == core/* ]]; then
#              echo "Global or core file changed: $file. Running all checks."
#              build_all_flag=true
#              break
#            fi
#          done
#
#          if [ "$build_all_flag" = true ]; then
#            TASKS_TO_RUN="ktlintCheck test"
#          else
#            echo "--- No global changes. Checking for specific module changes ---"
#            CHANGED_MODULES=""
#            for file in ${{ steps.changed_files.outputs.all_changed_files }}; do
#              if [[ "$file" == infra/* || "$file" == service/* ]]; then
#                module_path=$(echo "$file" | cut -d/ -f1-2)
#                if ! echo "$CHANGED_MODULES" | grep -q "$module_path"; then
#                  CHANGED_MODULES="$CHANGED_MODULES $module_path"
#                  echo "Module '$module_path' was added due to a change in '$file'."
#                fi
#              fi
#            done
#
#            if [ -n "$CHANGED_MODULES" ]; then
#              for module_path in $CHANGED_MODULES; do
#                # Gradle Task 경로 형식으로 변환 (예: service/jobstat-auth -> :service:jobstat-auth)
#                gradle_module=":${module_path//\//:}"
#                TASKS_TO_RUN="$TASKS_TO_RUN ${gradle_module}:ktlintCheck ${gradle_module}:test"
#              done
#            fi
#          fi
#
#          if [ -z "$TASKS_TO_RUN" ]; then
#            echo "No relevant files changed. Skipping lint and tests."
#          else
#            TASKS_TO_RUN=$(echo "$TASKS_TO_RUN" | sed 's/^ *//')
#            echo "Tasks to run: $TASKS_TO_RUN"
#          fi
#
#          echo "tasks_to_run=$TASKS_TO_RUN" >> $GITHUB_OUTPUT
#
#      - name: Run Lint and Tests for Changed Modules
#        if: steps.determine_tasks.outputs.tasks_to_run != ''
#        run: ./gradlew ${{ steps.determine_tasks.outputs.tasks_to_run }} --no-daemon --build-cache