name: Build and Update Manifests

on:
  push:
    branches: [ '**' ] # 모든 브랜치에 push 할 때 실행
  workflow_dispatch:
    inputs:
      services_to_deploy:
        description: '배포할 서비스 목록 (all 또는 쉼표로 구분, 예: auth,community-read)'
        required: true
        default: 'all'
        type: string

jobs:
  build-and-update-manifests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Application Code
        uses: actions/checkout@v4
        with:
          path: app
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get changed files
        id: changed_files
        if: github.event_name == 'push'
        uses: tj-actions/changed-files@v44
        with:
          path: app

      - name: Determine services to build
        id: set_services
        working-directory: app
        run: |
          ALL_MODULES="infra/jobstat-eureka-server infra/jobstat-api-gateway infra/jobstat-config-server service/jobstat-auth service/jobstat-community service/jobstat-community_read service/jobstat-notification service/jobstat-statistics_read"
          MODULE_LIST_JSON="[]"
          if [ "${{ github.event_name }}" == "push" ]; then
            CHANGED_MODULES=""
            for file in ${{ steps.changed_files.outputs.all_changed_files }}; do
              if [[ "$file" == infra/* || "$file" == service/* ]]; then
                module_path=$(echo "$file" | cut -d/ -f1-2);
                if ! echo "$CHANGED_MODULES" | grep -q "$module_path"; then CHANGED_MODULES="$CHANGED_MODULES $module_path"; fi
              fi
            done
            if [ -n "$CHANGED_MODULES" ]; then MODULE_LIST_JSON=$(echo "$CHANGED_MODULES" | sed 's/^ *//' | jq -R 'split(" ")' | jq -c '.'); fi
          else
            INPUT_SERVICES="${{ inputs.services_to_deploy }}"
            if [ "$INPUT_SERVICES" == "all" ]; then MODULE_LIST_JSON=$(echo "$ALL_MODULES" | jq -R 'split(" ")' | jq -c '.');
            else
              MODULE_LIST=""; FORMATTED_SERVICES=$(echo "$INPUT_SERVICES" | tr -d ' ' | sed 's/,/ /g')
              for service in $FORMATTED_SERVICES; do
                MATCH=$(echo "$ALL_MODULES" | grep -oE "([^ ]*jobstat-${service//_/-})");
                if [ -n "$MATCH" ]; then MODULE_LIST="$MODULE_LIST $MATCH"; fi
              done
              if [ -n "$MODULE_LIST" ]; then MODULE_LIST_JSON=$(echo "$MODULE_LIST" | sed 's/^ *//' | jq -R 'split(" ")' | jq -c '.'); fi
            fi
          fi
          echo "modules_json=$MODULE_LIST_JSON" >> $GITHUB_OUTPUT

      - name: Build and Push Images
        id: build_images
        if: steps.set_services.outputs.modules_json != '[]' && steps.set_services.outputs.modules_json != '[""]'
        working-directory: app
        run: |
          IMAGE_TAG=${GITHUB_SHA::7}
          echo "image_tag=${IMAGE_TAG}" >> $GITHUB_OUTPUT
          MODULES='${{ steps.set_services.outputs.modules_json }}'
          for module in $(echo "${MODULES}" | jq -r '.[]'); do
            service_name=$(basename "$module" | sed 's/jobstat-//' | sed 's/_/-/g')
            image_name="${{ secrets.DOCKERHUB_USERNAME }}/jobstat-${service_name}:${IMAGE_TAG}"
            echo "Building and pushing: ${image_name}"
            ./gradlew ":${module}:bootBuildImage" --imageName="${image_name}"
          done

      - name: Install Kustomize
        if: steps.build_images.outputs.image_tag
        run: |
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
          sudo mv kustomize /usr/local/bin/

      - name: Checkout Manifests Repository
        if: steps.build_images.outputs.image_tag
        uses: actions/checkout@v4
        with:
          repository: dltmdrb1996/jobstat-api-manifests
          path: manifests
          token: ${{ secrets.PAT }}

      - name: Update Image Tags in Manifests
        if: steps.build_images.outputs.image_tag
        working-directory: manifests
        run: |
          IMAGE_TAG=${{ steps.build_images.outputs.image_tag }}
          DOCKER_USER=${{ secrets.DOCKERHUB_USERNAME }}
          MODULES='${{ steps.set_services.outputs.modules_json }}'
          for module in $(echo "${MODULES}" | jq -r '.[]'); do
            service_name_base=$(basename "$module" | sed 's/jobstat-//' | sed 's/_/-/g')
            service_name_k8s="jobstat-${service_name_base}"
            echo "Setting image for ${service_name_k8s} to tag ${IMAGE_TAG}"
            kustomize edit set image "${DOCKER_USER}/${service_name_k8s}=${DOCKER_USER}/${service_name_k8s}:${IMAGE_TAG}" overlays/local-k3d
          done

      - name: Commit and Push Manifest Changes
        if: steps.build_images.outputs.image_tag
        working-directory: manifests
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add overlays/local-k3d/kustomization.yaml
          if ! git diff --staged --quiet; then
            git commit -m "Update image tags for services by ${{ github.actor }} from branch ${{ github.ref_name }}"
            git push
          else
            echo "No image changes to commit."
          fi