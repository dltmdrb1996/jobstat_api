#version: '3.8'
#
#networks:
#  public:
#    name: public
#    external: false
#  internal:
#    name: internal
#    driver: bridge
#    internal: true
#    external: false
#
#services:
#  nginx:
#    container_name: nginx
#    image: ${DOCKERHUB_USERNAME}/jobstat-nginx:${BACKEND_TAG}
#    ports:
#      - "80:80"
#      - "443:443"
#    expose:
#      - "8080"
#    volumes:
#      - /etc/nginx/ssl:/etc/nginx/ssl:ro
#      - nginx-logs:/var/log/nginx
#    networks:
#      - public     # 외부와 통신
#      - internal   # 내부 서비스와 통신
#    depends_on:
#      jobstat-app:
#        condition: service_healthy
#    restart: always
#
#  jobstat-config-server:
#    container_name: jobstat-config-server
#    image: ${DOCKERHUB_USERNAME}/jobstat-config-server:${BACKEND_TAG}
#    ports: # 외부에서 직접 접근할 필요가 없다면 포트 노출 불필요, app에서만 내부적으로 접근
#    expose:
#      - "8888"
#    volumes:
#      - /home/ubuntu/jobstat/logs/config-server:/app/logs
#    networks:
#      - internal
#    restart: always
#    healthcheck:
#      test: ["CMD-SHELL", "wget --spider -q http://localhost:8888/actuator/health || exit 1"]
#      interval: 60s
#      timeout: 10s
#      retries: 3
#      start_period: 30s
#
#  jobstat-app:
#    container_name: spring-app
#    image: ${DOCKERHUB_USERNAME}/jobstat-app:${BACKEND_TAG}
#    ports:
#      - "8081:8081"
#    volumes:
#      - /home/ubuntu/jobstat/logs/app:/app/logs
#    healthcheck:
#      test: [ "CMD-SHELL", "wget --spider -q http://localhost:8081/actuator/health || exit 1" ]
#      interval: 60s
#      timeout: 10s
#      retries: 3
#      start_period: 60s
#    environment:
#      - SERVER_PORT=8081
#      - SPRING_PROFILES_ACTIVE=prod
#      - DB_HOST=${DB_HOST}
#      - DB_PORT=3306
#      - DB_NAME=prod_jobstat
#      - DB_USERNAME=${DB_USERNAME}
#      - DB_PASSWORD=${DB_PASSWORD}
#      - JWT_SECRET=${JWT_SECRET}
#      - JWT_ACCESS_TOKEN_EXPIRATION=999999
#      - JWT_REFRESH_TOKEN_EXPIRATION=604800
#      - MONGO_USERNAME=${MONGO_USERNAME}
#      - MONGO_PASSWORD=${MONGO_PASSWORD}
#      - MONGO_HOST=${MONGO_HOST}
#      - MONGO_PORT=27017
#      - MONGO_DB=prod_database
#      - REDIS_HOST=${REDIS_HOST}
#      - REDIS_PORT=6379
#      - REDIS_DB=1
#      - SENTRY_AUTH_TOKEN=${SENTRY_AUTH_TOKEN}
#      - SENTRY_DSN=${SENTRY_DSN}
#      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
#      - DDNS_DOMAIN=${DDNS_DOMAIN}
#      - GMAIL_ID=${GMAIL_ID}
#      - GMAIL_PASSWORD=${GMAIL_PASSWORD}
#      - LOG_FILE_PATH=/app/logs
#      - ADMIN_USERNAME=${ADMIN_USERNAME}
#      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
#      - REDIS_PASSWORD=${REDIS_PASSWORD}
#      - REDIS_USERNAME=${REDIS_USERNAME}
#      - KAFKA_SERVERS=${KAFKA_SERVERS}
#    networks:
#      - public
#      - internal
#    expose:
#      - "8081"
#    restart: on-failure:3
#
#  nginx-exporter:
#    image: nginx/nginx-prometheus-exporter:latest
#    container_name: nginx-exporter
#    command:
#      - "--nginx.scrape-uri=http://nginx:8080/stub_status"
#      - "--web.listen-address=0.0.0.0:9113"
#      - "--web.telemetry-path=/metrics"
#    ports:
#      - "9113:9113"
#    networks:
#      - public
#      - internal
#    depends_on:
#      - nginx
#
#  node-exporter:
#    image: prom/node-exporter:latest
#    container_name: node-exporter
#    ports:
#      - "9100:9100"
#    volumes:
#      - /proc:/host/proc:ro
#      - /sys:/host/sys:ro
#      - /:/rootfs:ro
#    command:
#      - '--path.procfs=/host/proc'
#      - '--path.sysfs=/host/sys'
#      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
#    restart: unless-stopped
#    networks:
#      - public
#
#
#volumes:
#  nginx-logs: